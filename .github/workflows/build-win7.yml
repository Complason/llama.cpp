name: Build Win7 Fully Static llama-server (No DLLs)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build Static EXE for Win7
    runs-on: windows-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup MSYS2 with MinGW-w64 and CMake
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake base-devel
          arch: x86_64

      - name: Build with CMake (Fully Static, No OpenMP)
        run: |
          mkdir build
          cd build

          # ✅ 关键：所有参数在一行逻辑内，用 \ 续行，且不能有空格错位
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLAMA_BUILD_SERVER=ON \
            -DLLAMA_CURL=OFF \
            -DGGML_OPENMP=OFF \
            -G "MinGW Makefiles" \
            -DCMAKE_EXE_LINKER_FLAGS="-static -static-libgcc -static-libstdc++" \
            -DCMAKE_C_FLAGS="-D_WIN32_WINNT=0x0601 -DNTDDI_VERSION=0x06010000 -D__STDC_CONSTANT_MACROS" \
            -DCMAKE_CXX_FLAGS="-D_WIN32_WINNT=0x0601 -DNTDDI_VERSION=0x06010000 -D__STDC_CONSTANT_MACROS -static-libgcc -static-libstdc++" \
            && \
          cmake --build . --config Release
        shell: bash

      - name: Verify Build Success
        run: |
          EXE_PATH=$(find . -type f -name "llama-server.exe" | head -n1)
          if [ -f "$EXE_PATH" ]; then
            echo "✅ Build succeeded! Found: $EXE_PATH"
            echo "LLAMA_SERVER_PATH=$(cygpath -w "$EXE_PATH")" >> $GITHUB_ENV
          else
            echo "❌ Failed to build llama-server.exe"
            exit 1
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: llama-server-win7-static-no-dll
          path: ${{ env.LLAMA_SERVER_PATH }}
          if-no-files-found: error
